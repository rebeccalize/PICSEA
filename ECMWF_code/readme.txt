
After running the tracking for ECMWF, the data needs reformatting; this uses the numbered scripts. (1) copies the actual track files from the raw output, into directories per season, collecting all the seasons in one place. I then sort these (manually, it only takes 2 minutes) into directories per track, and then sort the tracks into "SIO storms" and "other SH storms". I then run (2) to reformat the SIO storms into a file format that's easier to use with python (without random differently-formatted lines, or gaps). It also separates out the deterministic, control, ensemble mean and ensemble files, and creates a separate file with the ibtracs and analysis tracks, as the raw output has much of this bundles together and can be pretty confusing to use. 

All of the other "compute" scripts that require tracks, use these reformatted files. The filenames for the rest of the code should be fairly self-explanatory, and most of them should be able to be run just as they are - it might require checking the directories in the script you're running, and some of them (I think just the "multi-year" stats scripts) need an "if" statement uncommenting and modifying if you're running them per resolution, as the 2015-2016 season has some storms in each resolution, so I have additional folders in the reformatted track files that contain the storms that belong to each resolution. The if statement just switches the directory based on which resolution you're running. 

"library" scripts (picsea_library.py and track_statistics_library.py) contain a bunch of functions that are used in the other scripts. I've added more directories when uploading the code to GitHub, so the import statements for these libraries might need the directory adding. 
